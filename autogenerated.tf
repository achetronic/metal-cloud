# craft a cluster spec yaml manifest
# from a template file generated with k0sctl
locals {
  # Create the base cluster manifest
  # for k0s when instances are conected using macvtap
  k0s_hosts_macvtap = [
    for i, v in local.instances_output : {
      role = length(regexall("(\\bmaster\\b)+", i)) != 0 ? "controller" : "worker"
      ssh = {
        address = split("/", v.addresses[0])[0]
        port = 22
        user = v.user
        keyPath = pathexpand("./ssh-keys/id_ed25519")
      }
    }
  ]

  # Attach the bastion data to the cluster manifest
  # for k0s when instances are connected behind a NAT
  k0s_hosts_nat = [
    for _, v in local.k0s_hosts_macvtap : merge(v, {
        ssh = merge(lookup(v, "ssh", {}), {
          bastion = {
            address = var.bastion_connection.address
            user    = var.bastion_connection.user
            keyPath : var.bastion_connection.sshKeyPath
          }
        })
    })
  ]

  # Build the cluster manifest for k0sctl
#  k0s_cluster_manifest = templatefile("${path.module}/templates/k0sctl.yaml.tpl", {
#    hosts = lower(local.networks.mode) == "nat" ? local.k0s_hosts_nat : local.k0s_hosts_macvtap
#  })
}
# Generates a file with the k0s cluster manifest
#resource "local_file" "k0s_cluster_manifest" {
#  sensitive_content = local.k0s_cluster_manifest
#  filename = "${path.module}/autogenerated/k0sctl.yaml"
#}
