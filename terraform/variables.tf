# The globals block is the place to define global stuff
# mostly related to things that are common to all the VMs,
# such as the credentials to connect to the hypervisor
variable "globals" {
  type = object({

    # SSH parameters to connect to the host
    ssh_connection = object({
      # IP address to connect to the host
      host = string

      # Username to be authenticated in the host
      username = string

      # Password to be authenticated in the host
      password = optional(string)

      # Path to the private key to be authenticated in the host
      # This key should already exists on the host machine
      private_key_path = optional(string)

      # Which auth method use on SSH connection: password, key
      mode = string
    })

    # Parameters related to those files used/thrown at some point on VM creation
    io_files = object({

      # Path to the folder containing SSH keys authorized in all the VMs
      # Default to: ${path.root}/files/input/external-ssh-keys/
      external_ssh_keys_path = optional(string)

      # Path to the folder where instances' autogenerated SSH keys will be stored
      # Default to: ${path.root}/files/output/
      instances_ssh_keys_path = optional(string)
    })
  })

  description = "Global configuration definition block"

  validation {
    condition     = contains(["password", "key"], var.globals.ssh_connection.mode)
    error_message = "Allowed values for ssh_connection.mode are \"password\" or \"key\"."
  }
}

# The networks definition block is the place to define
# which networks of type NAT or macvtap will be created and attachable
variable "networks" {
  type = map(object({
    mode                = string
    dhcp_address_blocks = list(string)
    gateway_address     = string
    interface           = optional(string)
  }))
  description = "Networks definition block"
}

# The instances block is the place to define all the VMs
# (and their resources) that will be created
variable "instances" {
  type = map(object({
    # TODO
    arch    = optional(string)
    machine = optional(string)

    # TODO
    vcpu   = number
    memory = number
    disk   = number
    networks = list(object({
      name    = string
      address = string
      mac     = optional(string)
    }))
  }))
  description = "Instances definition block"
}