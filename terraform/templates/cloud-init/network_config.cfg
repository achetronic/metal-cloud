version: 2
ethernets:
%{ for network_key, network_value in networks ~}
  # TODO: Fix the name for this. This name should be auto detected
  interface${network_key}:
    match:
      macaddress: ${network_value.network_attachment.mac}
%{ if network_value.network_info.mode=="nat" ~}
    # This interface relies on DHCP because the virtualized Guest device
    # is connected to a NAT and configured to claim only the requested IP
    dhcp4: true
    dhcp6: false
%{ else ~}
    # This interface is configured as STATIC because the related Guest virtualized network device
    # is connected directly to a Host physical interface, so it can not claim an IP as intermediate.
    # This way OS needs to claim the requested IP itself
    dhcp4: false
    dhcp6: false
    addresses: [${network_value.network_attachment.address}]
%{ endif ~}
    routes:
    - to: default # could be 0.0.0.0/0 optionally
      via: ${network_value.network_info.gateway_address}
      #metric: 100
      on-link: true
    #gateway4: ${network_value.network_info.gateway_address}
    nameservers:
      addresses: [${network_value.network_info.gateway_address}, 4.4.4.4, 8.8.8.8]
      #search: [${network_value.network_info.name}.${network_value.network_info.mode}.local]
%{ endfor ~}
